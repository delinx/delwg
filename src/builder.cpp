#include "builder.hpp"

Builder::Builder()
{
}

Builder::Page::Page(std::string fileName)
{
    Builder::Page::Page::fileName = fileName;
}

std::string Builder::Page::generate()
{
    std::stringstream data;

    data << "<!DOCTYPE html>"
         << std::endl
         << "<html>"
         << std::endl
         << "<head>"
         << std::endl
         << Builder::Page::head
         << std::endl
         << "</head>"
         << std::endl
         << "<body>"
         << std::endl
         << Builder::Page::body
         << std::endl
         << "</body>"
         << std::endl
         << "</html>"
         << std::endl
         << "<!-- Generated by delwg -->"
         << std::endl;

    return data.str();
}

std::string Builder::templateToString(std::string path)
{
    std::ifstream t(path);
    std::stringstream buffer;
    buffer << t.rdbuf();
    return buffer.str();
}

std::string Builder::replaceString(std::string source, std::string target, std::string text)
{
    u64 result = source.find(target);
    if(result <= source.length())
    {
        return source.replace(source.find(target), target.length(), text);
    }
    return source;
}
